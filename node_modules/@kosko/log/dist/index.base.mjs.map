{"version":3,"file":"index.base.mjs","sources":["../src/LogLevel.ts","../src/ConsoleLogWriter.ts","../src/Logger.ts","../src/createLogger.ts","../src/SilentLogWriter.ts","../src/index.ts"],"sourcesContent":["/**\n * @public\n */\nexport enum LogLevel {\n  Trace = 1,\n  Debug = 2,\n  Info = 3,\n  Warn = 4,\n  Error = 5,\n  Fatal = 6\n}\n\nconst LOG_LEVEL_MAP: Record<string, LogLevel> = {\n  trace: LogLevel.Trace,\n  debug: LogLevel.Debug,\n  info: LogLevel.Info,\n  warn: LogLevel.Warn,\n  error: LogLevel.Error,\n  fatal: LogLevel.Fatal\n};\n\n/**\n * @public\n */\nexport function logLevelFromString(level: string): LogLevel | undefined {\n  return LOG_LEVEL_MAP[level];\n}\n","import { LogLevel } from \"./LogLevel\";\nimport { Log, LogWriter } from \"./types\";\n\n/**\n * Prints logs to console.\n *\n * @public\n */\nexport default class ConsoleLogWriter implements LogWriter {\n  public write(log: Log): void {\n    const args = [log.message, log.data, log.error].filter(Boolean);\n\n    switch (log.level) {\n      case LogLevel.Trace:\n        console.trace(...args);\n        break;\n\n      case LogLevel.Debug:\n        console.debug(...args);\n        break;\n\n      case LogLevel.Info:\n        console.info(...args);\n        break;\n\n      case LogLevel.Warn:\n        console.warn(...args);\n        break;\n\n      case LogLevel.Error:\n      case LogLevel.Fatal:\n        console.error(...args);\n        break;\n    }\n  }\n}\n","import { LogLevel } from \"./LogLevel\";\nimport { Log, LogWriter } from \"./types\";\n\n/**\n * @public\n */\nexport interface LoggerOptions {\n  level?: LogLevel;\n  writer?: LogWriter;\n}\n\n/**\n * @public\n */\nexport default class Logger {\n  private level: LogLevel;\n  private writer: LogWriter;\n\n  public constructor(options: Required<LoggerOptions>) {\n    this.level = options.level;\n    this.writer = options.writer;\n  }\n\n  /**\n   * @example\n   * Basic message\n   * ```ts\n   * logger.log(LogLevel.Info, \"basic message\");\n   * ```\n   *\n   * @example\n   * Error\n   * ```ts\n   * logger.log(LogLevel.Error, \"error log\", {\n   *   error: new Error(\"error cause\")\n   * });\n   * ```\n   *\n   * @example\n   * Data\n   * ```ts\n   * logger.log(LogLevel.Info, \"log with data\", {\n   *   data: {\n   *     foo: \"bar\"\n   *   }\n   * });\n   * ```\n   */\n  public log(\n    level: LogLevel,\n    message: string,\n    options: Partial<Omit<Log, \"level\" | \"message\" | \"loggerLevel\">> = {}\n  ): void {\n    if (this.enabled(level)) {\n      const { time = new Date(), ...rest } = options;\n\n      this.writer.write({\n        loggerLevel: this.level,\n        level,\n        message,\n        time,\n        ...rest\n      });\n    }\n  }\n\n  /**\n   * Returns logger level.\n   */\n  public getLevel(): LogLevel {\n    return this.level;\n  }\n\n  /**\n   * Sets logger level.\n   */\n  public setLevel(level: LogLevel): void {\n    this.level = level;\n  }\n\n  /**\n   * Returns true if the given `level` is enabled in logger.\n   */\n  public enabled(level: LogLevel): boolean {\n    return this.level <= level;\n  }\n\n  /**\n   * Returns writer of logger.\n   */\n  public getWriter(): LogWriter {\n    return this.writer;\n  }\n\n  /**\n   * Sets writer of logger.\n   */\n  public setWriter(writer: LogWriter): void {\n    this.writer = writer;\n  }\n}\n\nexport function createLoggerFactory(createWriter: () => LogWriter) {\n  return (options: Partial<LoggerOptions> = {}): Logger => {\n    const { level = LogLevel.Info, writer = createWriter() } = options;\n\n    return new Logger({ level, writer });\n  };\n}\n","import ConsoleLogWriter from \"./ConsoleLogWriter\";\nimport { createLoggerFactory } from \"./Logger\";\n\n/**\n * @public\n */\nexport const createLogger = createLoggerFactory(() => new ConsoleLogWriter());\n","import { LogWriter } from \"./types\";\n\n/**\n * Omits logs.\n *\n * @public\n */\nexport default class SilentLogWriter implements LogWriter {\n  public write(): void {\n    // do nothing\n  }\n}\n","/**\n * Logging library.\n *\n * @packageDocumentation\n */\n\nimport { createLogger } from \"./createLogger\";\n\nexport * from \"./types\";\nexport { default as ConsoleLogWriter } from \"./ConsoleLogWriter\";\nexport { default as SilentLogWriter } from \"./SilentLogWriter\";\nexport { LogLevel, logLevelFromString } from \"./LogLevel\";\nexport { default as Logger, type LoggerOptions } from \"./Logger\";\nexport { createLogger } from \"./createLogger\";\n\nexport default createLogger();\n"],"names":["LogLevel","Trace","Debug","Info","Warn","Error","Fatal","LOG_LEVEL_MAP","trace","debug","info","warn","error","fatal","logLevelFromString","level","ConsoleLogWriter","write","log","args","message","data","filter","Boolean","console","Logger","options","enabled","time","Date","rest","writer","loggerLevel","getLevel","setLevel","getWriter","setWriter","createLoggerFactory","createWriter","createLogger","SilentLogWriter"],"mappings":"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"}