{"version":3,"file":"index.node.cjs","sources":["../src/extensions.ts","../src/resolve.ts","../src/import.node.ts"],"sourcesContent":["import { createRequire } from \"node:module\";\n\nconst BASE_EXTENSIONS = [\".js\", \".json\"];\n\n/**\n * Returns file extensions which can be imported.\n *\n * @defaultValue Node.js\n * ```js\n * [\".cjs\", \".mjs\", \".js\", \".json\", \".node\"]\n * ```\n *\n * @public\n */\nexport function getRequireExtensions(): string[] {\n  // eslint-disable-next-line no-restricted-globals\n  switch (process.env.BUILD_TARGET) {\n    case \"node\": {\n      const req =\n        // eslint-disable-next-line no-restricted-globals\n        process.env.BUILD_FORMAT === \"esm\"\n          ? createRequire(import.meta.url)\n          : require;\n\n      const extensions = new Set([\n        \".cjs\",\n        \".mjs\",\n        ...BASE_EXTENSIONS,\n        // The global `require` function includes extensions registered by\n        // other package (e.g. ts-node).\n        // However, this function always returns an empty array on Node.js 20+.\n        ...req(\"../lib/node-extensions.cjs\")()\n      ]);\n\n      return [...extensions];\n    }\n    case \"deno\":\n      return [\".ts\", ...BASE_EXTENSIONS];\n\n    default:\n      return BASE_EXTENSIONS;\n  }\n}\n","import { stat } from \"node:fs/promises\";\nimport { join, resolve as resolvePath } from \"node:path\";\nimport { cwd } from \"node:process\";\nimport { getRequireExtensions } from \"./extensions\";\nimport { getErrorCode } from \"@kosko/common-utils\";\n\n/**\n * @public\n */\nexport interface ResolveOptions {\n  /**\n   * The directory to resolve from.\n   *\n   * @defaultValue `process.cwd()`\n   */\n  baseDir?: string;\n\n  /**\n   * File extensions to resolve.\n   *\n   * @defaultValue `getRequireExtensions()`\n   */\n  extensions?: readonly string[];\n}\n\nasync function fileExists(path: string) {\n  try {\n    const stats = await stat(path);\n    return stats.isFile();\n  } catch (err) {\n    if (getErrorCode(err) === \"ENOENT\") return false;\n    throw err;\n  }\n}\n\n/**\n * Resolves path to the specified module.\n *\n * @public\n */\nexport async function resolve(\n  id: string,\n  options: ResolveOptions = {}\n): Promise<string | undefined> {\n  // Implementation is based on: https://nodejs.org/api/modules.html#all-together\n  const { baseDir = cwd(), extensions = getRequireExtensions() } = options;\n  const resolved = resolvePath(baseDir, id);\n  const index = join(resolved, \"index\");\n\n  const possiblePaths = [\n    resolved,\n    ...extensions.map((ext) => resolved + ext),\n    ...extensions.map((ext) => index + ext)\n  ];\n\n  for (const path of possiblePaths) {\n    if (await fileExists(path)) {\n      return path;\n    }\n  }\n}\n","import { getErrorCode } from \"@kosko/common-utils\";\nimport { createRequire } from \"node:module\";\nimport { env, version as nodeVersion } from \"node:process\";\nimport { pathToFileURL } from \"node:url\";\n\nconst ESM_IMPORT_DISABLED = env.ESM_IMPORT_DISABLED === \"1\";\n\n/**\n * Node.js supports import assertions since v16.14.0, v17.1.0.\n */\nfunction getImportAssertionsSupported(): boolean {\n  const [major, minor] = nodeVersion\n    .substring(1)\n    .split(\".\")\n    .map((x) => parseInt(x, 10));\n\n  switch (major) {\n    case 16:\n      return minor >= 14;\n    case 17:\n      return minor >= 1;\n    default:\n      return major >= 18;\n  }\n}\n\nasync function importDefault(id: string) {\n  const mod = await import(id);\n  return mod.default;\n}\n\ntype ImportWithOpts = (id: string, opts: ImportCallOptions) => any;\n\n/**\n * On older version of Node.js, `import()` with more than one parameter will\n * throw an error. That's why we move `import()` call to another file and\n * determine whether to use it or not based on Node.js version.\n */\nconst importWithOpts = (async (): Promise<ImportWithOpts | undefined> => {\n  if (!ESM_IMPORT_DISABLED && getImportAssertionsSupported()) {\n    return importDefault(\"../lib/import-with-opts.mjs\");\n  }\n})();\n\nconst req =\n  // eslint-disable-next-line no-restricted-globals\n  process.env.BUILD_FORMAT === \"cjs\" ? require : createRequire(import.meta.url);\n\nfunction requireModule(path: string) {\n  const mod = req(path);\n  return mod && mod.__esModule ? mod : { default: mod };\n}\n\nasync function tryImport<T>(\n  path: string,\n  fn: (url: string) => Promise<T>\n): Promise<T> {\n  const url = pathToFileURL(path).toString();\n\n  try {\n    return await fn(url);\n  } catch (err) {\n    // This might happen when importing `.ts` or `.json` files.\n    if (getErrorCode(err) !== \"ERR_UNKNOWN_FILE_EXTENSION\") {\n      throw err;\n    }\n  }\n\n  return requireModule(path);\n}\n\nasync function importJson(path: string) {\n  const importFn = await importWithOpts;\n\n  if (!importFn) {\n    return requireModule(path);\n  }\n\n  return tryImport(path, (url) => importFn(url, { assert: { type: \"json\" } }));\n}\n\nexport async function importPath(path: string) {\n  if (ESM_IMPORT_DISABLED) {\n    return requireModule(path);\n  }\n\n  if (path.endsWith(\".json\")) {\n    return importJson(path);\n  }\n\n  return tryImport(path, (url) => import(url));\n}\n"],"names":["BASE_EXTENSIONS","getRequireExtensions","req","require","extensions","Set","fileExists","path","stats","stat","isFile","err","getErrorCode","resolve","id","options","baseDir","cwd","resolved","resolvePath","index","join","possiblePaths","map","ext","ESM_IMPORT_DISABLED","env","importDefault","mod","default","importWithOpts","getImportAssertionsSupported","major","minor","nodeVersion","substring","split","x","parseInt","requireModule","__esModule","tryImport","fn","url","pathToFileURL","toString","importJson","importFn","assert","type","importPath","endsWith"],"mappings":"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"}