{"version":3,"file":"index.node.cjs","sources":["../src/import.cjs.ts","../src/module.ts","../src/fetch.ts","../src/load.ts"],"sourcesContent":["export async function importModule(id: string) {\n  return require(id);\n}\n","import logger, { LogLevel } from \"@kosko/log\";\nimport { importModule } from \"./import\";\n\n/**\n * @public\n */\nexport interface ResourceModule {\n  readonly path: string;\n  readonly export: string;\n}\n\n/**\n * @public\n */\nexport interface ResourceKind {\n  apiVersion: string;\n  kind: string;\n}\n\nlet moduleMap: Record<string, Record<string, ResourceModule>> = {};\n\nfunction getGroup(apiVersion: string): string {\n  const arr = apiVersion.split(\"/\");\n  return arr.length === 1 ? \"\" : arr[0];\n}\n\n/**\n * @public\n */\nexport function setResourceModule(\n  res: ResourceKind,\n  mod: ResourceModule\n): void {\n  const { apiVersion, kind } = res;\n\n  if (!moduleMap[apiVersion]) {\n    moduleMap[apiVersion] = {};\n  }\n\n  moduleMap[apiVersion][kind] = mod;\n  logger.log(LogLevel.Debug, \"Set resource module\", {\n    data: {\n      resourceKind: res,\n      resourceModule: mod\n    }\n  });\n}\n\nasync function getKubernetesModels(\n  res: ResourceKind\n): Promise<ResourceModule | undefined> {\n  const { apiVersion, kind } = res;\n  const group = getGroup(apiVersion);\n\n  if (group && group.includes(\".\") && !group.endsWith(\".k8s.io\")) {\n    return;\n  }\n\n  const path = `kubernetes-models/${apiVersion}/${kind}`;\n\n  try {\n    const result = await importModule(path);\n\n    if (result?.[kind]) {\n      const mod: ResourceModule = { path, export: kind };\n      setResourceModule(res, mod);\n      return mod;\n    }\n  } catch {\n    return;\n  }\n}\n\n/**\n * @public\n */\nexport async function getResourceModule(\n  res: ResourceKind\n): Promise<ResourceModule | undefined> {\n  return (\n    moduleMap[res.apiVersion]?.[res.kind] ?? (await getKubernetesModels(res))\n  );\n}\n\n/**\n * @public\n */\nexport function resetResourceModules(): void {\n  moduleMap = {};\n  logger.log(LogLevel.Debug, \"Reset resource modules\");\n}\n","/* eslint-disable no-restricted-globals */\n/// <reference lib=\"dom\" />\nimport { createRequire } from \"node:module\";\n\nfunction getFetch(): typeof fetch {\n  if (typeof fetch === \"function\") {\n    return fetch;\n  }\n\n  if (process.env.BUILD_TARGET === \"node\") {\n    const req =\n      process.env.BUILD_FORMAT === \"cjs\"\n        ? require\n        : createRequire(import.meta.url);\n\n    return req(\"node-fetch\");\n  }\n\n  throw new Error(\"fetch is undefined\");\n}\n\nexport default getFetch();\n","import { loadAll } from \"js-yaml\";\nimport { readFile } from \"node:fs/promises\";\nimport { getResourceModule, ResourceKind } from \"./module\";\nimport logger, { LogLevel } from \"@kosko/log\";\nimport stringify from \"fast-safe-stringify\";\nimport { isRecord } from \"@kosko/common-utils\";\nimport { importModule } from \"./import\";\nimport defaultFetch from \"./fetch\";\n\n/**\n * Describes an object which seems to be a Kubernetes manifest.\n *\n * @public\n */\nexport interface Manifest extends ResourceKind {\n  [key: string]: unknown;\n}\n\ntype ManifestConstructor = new (data: Manifest) => Manifest;\n\n/**\n * @public\n */\nexport interface LoadOptions {\n  transform?(this: void, manifest: Manifest): Manifest | null | undefined;\n}\n\nfunction isManifest(value: Record<string, unknown>): value is Manifest {\n  return (\n    typeof value.apiVersion === \"string\" &&\n    !!value.apiVersion &&\n    typeof value.kind === \"string\" &&\n    !!value.kind\n  );\n}\n\nasync function getConstructor(\n  res: ResourceKind\n): Promise<ManifestConstructor | undefined> {\n  const mod = await getResourceModule(res);\n\n  if (!mod) {\n    logger.log(LogLevel.Debug, \"No resource modules\", {\n      data: res\n    });\n    return;\n  }\n\n  try {\n    const result = await importModule(mod.path);\n    return result[mod.export];\n  } catch {\n    logger.log(LogLevel.Debug, \"Failed to import the resource module\", {\n      data: mod\n    });\n    return;\n  }\n}\n\n/**\n * Loads a Kubernetes YAML file from a string.\n *\n * @public\n */\nexport async function loadString(\n  content: string,\n  options: LoadOptions = {}\n): Promise<Manifest[]> {\n  const { transform = (x) => x } = options;\n  const input = loadAll(content).filter((x) => x != null);\n  const manifests: Manifest[] = [];\n\n  for (const entry of input) {\n    if (!isRecord(entry)) {\n      throw new Error(`The value must be an object: ${stringify(entry)}`);\n    }\n\n    if (!isManifest(entry)) {\n      throw new Error(`apiVersion and kind are required: ${stringify(entry)}`);\n    }\n\n    const Constructor = await getConstructor(entry);\n    const manifest = transform(Constructor ? new Constructor(entry) : entry);\n\n    if (manifest) {\n      manifests.push(manifest);\n    }\n  }\n\n  return manifests;\n}\n\n/**\n * Loads a Kubernetes YAML file from `path`.\n *\n * @param path - Path to a Kubernetes YAML file.\n * @public\n */\nexport function loadFile(path: string, options?: LoadOptions) {\n  return async (): Promise<Manifest[]> => {\n    const content = await readFile(path, \"utf-8\");\n    logger.log(LogLevel.Debug, `File loaded from: ${path}`);\n\n    return loadString(content, options);\n  };\n}\n\n/**\n * {@link LoadOptions} and properties defined in {@link https://developer.mozilla.org/en-US/docs/Web/API/Request | Request} class.\n *\n * @privateRemarks\n * This type exists because sometimes `RequestInit` is `any` when `DOM` type\n * is not loaded. Using an interface instead of `LoadOptions & RequestInit`\n * allows us to ignoring `RequestInit` when it is `any`.\n *\n * @public\n */\nexport interface LoadUrlOptions extends LoadOptions, RequestInit {\n  fetch?: typeof fetch;\n}\n\n/**\n * Loads a Kubernetes YAML file from `url`.\n *\n * @remarks\n * By default, this function uses `fetch` API defined in the global scope.\n * On Node.js, if `global.fetch` is undefined, {@link https://github.com/node-fetch/node-fetch | node-fetch}\n * will be used instead.\n *\n * @param url - URL to a Kubernetes YAML file.\n * @public\n */\nexport function loadUrl(\n  url: RequestInfo,\n  options: LoadUrlOptions = {}\n): () => Promise<Manifest[]> {\n  const { transform, fetch = defaultFetch, ...init } = options;\n\n  return async () => {\n    const res = await fetch(url, init);\n    logger.log(LogLevel.Debug, `Fetched YAML`, {\n      data: { url, status: res.status }\n    });\n\n    if (!res.ok) {\n      throw new Error(`Failed to fetch YAML file from: ${url}`);\n    }\n\n    return loadString(await res.text(), { transform });\n  };\n}\n"],"names":["importModule","id","require","moduleMap","setResourceModule","res","mod","apiVersion","kind","logger","log","LogLevel","Debug","data","resourceKind","resourceModule","getKubernetesModels","group","getGroup","arr","split","length","includes","endsWith","path","result","export","getResourceModule","resetResourceModules","fetch","req","getConstructor","loadString","content","options","transform","x","input","loadAll","filter","manifests","entry","value","isRecord","Error","stringify","Constructor","manifest","push","loadFile","readFile","loadUrl","url","defaultFetch","init","status","ok","text"],"mappings":"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"}