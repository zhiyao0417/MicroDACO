{"version":3,"file":"index.node.mjs","sources":["../src/index.ts"],"sourcesContent":["/**\n * Common utilities used in Kosko.\n *\n * @packageDocumentation\n */\n\n/**\n * Returns true when type of `value` is `object` and is not `null`, `undefined` or\n * an array.\n *\n * @public\n */\nexport function isRecord(\n  value: unknown\n): value is Record<string | symbol, unknown> {\n  return value != null && typeof value === \"object\" && !Array.isArray(value);\n}\n\n/**\n * Transforms `input` into an array, or leave it as-is if `input` is already an array.\n *\n * @public\n */\nexport function toArray<T>(input: T | T[]): T[] {\n  return Array.isArray(input) ? input : [input];\n}\n\n/**\n * Returns `code` of an error-like object.\n *\n * @public\n */\nexport function getErrorCode(err: unknown): string | undefined {\n  if (isRecord(err) && typeof err.code === \"string\") {\n    return err.code;\n  }\n}\n"],"names":["isRecord","value","Array","isArray","toArray","input","getErrorCode","err","code"],"mappings":"AAYO,SAASA,QACdC,CAAAA,KAAc,EAC6B;IAC3C,OAAgB,IAAI,IAAbA,KAAiB,IAAiB,QAAjB,IAAA,OAAOA,KAAsB,IAAA,CAACC,KAAMC,CAAAA,OAAO,CAACF,KAAAA,CAAAA,CAAAA;AACtE,CAAC;AAOM,SAASG,OAAWC,CAAAA,KAAc,EAAO;AAC9C,IAAA,OAAOH,KAAMC,CAAAA,OAAO,CAACE,KAAAA,CAAAA,GAASA,KAAQ,GAAA;AAACA,QAAAA,KAAAA;AAAM,KAAA,CAAA;AAC/C,CAAC;AAOM,SAASC,YAAaC,CAAAA,GAAY,EAAsB;IAC7D,IAAIP,QAAAA,CAASO,GAAQ,CAAA,IAAoB,QAApB,IAAA,OAAOA,IAAIC,IAAI,EAClC,OAAOD,GAAAA,CAAIC,IAAI,CAAA;AAEnB;;;;"}