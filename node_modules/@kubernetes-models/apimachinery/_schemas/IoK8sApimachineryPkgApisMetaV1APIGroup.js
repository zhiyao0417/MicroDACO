"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.addSchema = void 0;
const validate_1 = require("@kubernetes-models/validate");
const IoK8sApimachineryPkgApisMetaV1GroupVersionForDiscovery_1 = require("./IoK8sApimachineryPkgApisMetaV1GroupVersionForDiscovery.js");
const IoK8sApimachineryPkgApisMetaV1ServerAddressByClientCIDR_1 = require("./IoK8sApimachineryPkgApisMetaV1ServerAddressByClientCIDR.js");
const schema = {
    "properties": {
        "apiVersion": {
            "type": "string",
            "nullable": true
        },
        "kind": {
            "type": "string",
            "nullable": true
        },
        "name": {
            "type": "string"
        },
        "preferredVersion": {
            "oneOf": [
                {
                    "$ref": "io.k8s.apimachinery.pkg.apis.meta.v1.GroupVersionForDiscovery#"
                },
                {
                    "type": "null"
                }
            ]
        },
        "serverAddressByClientCIDRs": {
            "items": {
                "$ref": "io.k8s.apimachinery.pkg.apis.meta.v1.ServerAddressByClientCIDR#"
            },
            "type": "array",
            "nullable": true
        },
        "versions": {
            "items": {
                "$ref": "io.k8s.apimachinery.pkg.apis.meta.v1.GroupVersionForDiscovery#"
            },
            "type": "array"
        }
    },
    "required": [
        "name",
        "versions"
    ],
    "type": "object"
};
function addSchema() {
    (0, IoK8sApimachineryPkgApisMetaV1GroupVersionForDiscovery_1.addSchema)();
    (0, IoK8sApimachineryPkgApisMetaV1ServerAddressByClientCIDR_1.addSchema)();
    (0, validate_1.register)("io.k8s.apimachinery.pkg.apis.meta.v1.APIGroup", schema);
}
exports.addSchema = addSchema;
