"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.IoK8sApiRbacV1beta1ClusterRole = exports.ClusterRole = void 0;
const base_1 = require("@kubernetes-models/base");
const IoK8sApiRbacV1beta1ClusterRole_1 = require("../../_schemas/IoK8sApiRbacV1beta1ClusterRole.js");
/**
 * ClusterRole is a cluster level, logical grouping of PolicyRules that can be referenced as a unit by a RoleBinding or ClusterRoleBinding. Deprecated in v1.17 in favor of rbac.authorization.k8s.io/v1 ClusterRole, and will no longer be served in v1.22.
 * @deprecated
 */
class ClusterRole extends base_1.Model {
    constructor(data) {
        super({
            apiVersion: ClusterRole.apiVersion,
            kind: ClusterRole.kind,
            ...data
        });
    }
}
exports.ClusterRole = ClusterRole;
exports.IoK8sApiRbacV1beta1ClusterRole = ClusterRole;
ClusterRole.apiVersion = "rbac.authorization.k8s.io/v1beta1";
ClusterRole.kind = "ClusterRole";
ClusterRole.is = (0, base_1.createTypeMetaGuard)(ClusterRole);
(0, base_1.setSchema)(ClusterRole, "io.k8s.api.rbac.v1beta1.ClusterRole", IoK8sApiRbacV1beta1ClusterRole_1.addSchema);
