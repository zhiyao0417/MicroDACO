"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.addSchema = void 0;
const validate_1 = require("@kubernetes-models/validate");
const IoK8sApiCoreV1TopologySelectorTerm_1 = require("./IoK8sApiCoreV1TopologySelectorTerm.js");
const IoK8sApimachineryPkgApisMetaV1ObjectMeta_1 = require("@kubernetes-models/apimachinery/_schemas/IoK8sApimachineryPkgApisMetaV1ObjectMeta");
const schema = {
    "properties": {
        "allowVolumeExpansion": {
            "type": "boolean",
            "nullable": true
        },
        "allowedTopologies": {
            "items": {
                "$ref": "io.k8s.api.core.v1.TopologySelectorTerm#"
            },
            "type": "array",
            "nullable": true
        },
        "apiVersion": {
            "type": "string",
            "enum": [
                "storage.k8s.io/v1beta1"
            ]
        },
        "kind": {
            "type": "string",
            "enum": [
                "StorageClass"
            ]
        },
        "metadata": {
            "oneOf": [
                {
                    "$ref": "io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta#"
                },
                {
                    "type": "null"
                }
            ]
        },
        "mountOptions": {
            "items": {
                "type": "string"
            },
            "type": "array",
            "nullable": true
        },
        "parameters": {
            "additionalProperties": {
                "type": "string"
            },
            "type": "object",
            "nullable": true
        },
        "provisioner": {
            "type": "string"
        },
        "reclaimPolicy": {
            "type": "string",
            "nullable": true
        },
        "volumeBindingMode": {
            "type": "string",
            "nullable": true
        }
    },
    "required": [
        "provisioner",
        "apiVersion",
        "kind"
    ],
    "type": "object"
};
function addSchema() {
    (0, IoK8sApiCoreV1TopologySelectorTerm_1.addSchema)();
    (0, IoK8sApimachineryPkgApisMetaV1ObjectMeta_1.addSchema)();
    (0, validate_1.register)("io.k8s.api.storage.v1beta1.StorageClass", schema);
}
exports.addSchema = addSchema;
