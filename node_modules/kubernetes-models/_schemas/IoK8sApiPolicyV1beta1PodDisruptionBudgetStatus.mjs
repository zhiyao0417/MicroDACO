import { register } from "@kubernetes-models/validate";
import { addSchema as IoK8sApimachineryPkgApisMetaV1Condition } from "@kubernetes-models/apimachinery/_schemas/IoK8sApimachineryPkgApisMetaV1Condition";
import { addSchema as IoK8sApimachineryPkgApisMetaV1Time } from "@kubernetes-models/apimachinery/_schemas/IoK8sApimachineryPkgApisMetaV1Time";
const schema = {
    "properties": {
        "conditions": {
            "items": {
                "$ref": "io.k8s.apimachinery.pkg.apis.meta.v1.Condition#"
            },
            "type": "array",
            "nullable": true
        },
        "currentHealthy": {
            "format": "int32",
            "type": "integer"
        },
        "desiredHealthy": {
            "format": "int32",
            "type": "integer"
        },
        "disruptedPods": {
            "additionalProperties": {
                "$ref": "io.k8s.apimachinery.pkg.apis.meta.v1.Time#"
            },
            "type": "object",
            "nullable": true
        },
        "disruptionsAllowed": {
            "format": "int32",
            "type": "integer"
        },
        "expectedPods": {
            "format": "int32",
            "type": "integer"
        },
        "observedGeneration": {
            "format": "int64",
            "type": "integer",
            "nullable": true
        }
    },
    "required": [
        "disruptionsAllowed",
        "currentHealthy",
        "desiredHealthy",
        "expectedPods"
    ],
    "type": "object"
};
export function addSchema() {
    IoK8sApimachineryPkgApisMetaV1Condition();
    IoK8sApimachineryPkgApisMetaV1Time();
    register("io.k8s.api.policy.v1beta1.PodDisruptionBudgetStatus", schema);
}
