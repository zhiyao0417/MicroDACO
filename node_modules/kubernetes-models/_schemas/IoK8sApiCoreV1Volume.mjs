import { register } from "@kubernetes-models/validate";
import { addSchema as IoK8sApiCoreV1AWSElasticBlockStoreVolumeSource } from "./IoK8sApiCoreV1AWSElasticBlockStoreVolumeSource.mjs";
import { addSchema as IoK8sApiCoreV1AzureDiskVolumeSource } from "./IoK8sApiCoreV1AzureDiskVolumeSource.mjs";
import { addSchema as IoK8sApiCoreV1AzureFileVolumeSource } from "./IoK8sApiCoreV1AzureFileVolumeSource.mjs";
import { addSchema as IoK8sApiCoreV1CephFSVolumeSource } from "./IoK8sApiCoreV1CephFSVolumeSource.mjs";
import { addSchema as IoK8sApiCoreV1CinderVolumeSource } from "./IoK8sApiCoreV1CinderVolumeSource.mjs";
import { addSchema as IoK8sApiCoreV1ConfigMapVolumeSource } from "./IoK8sApiCoreV1ConfigMapVolumeSource.mjs";
import { addSchema as IoK8sApiCoreV1CSIVolumeSource } from "./IoK8sApiCoreV1CSIVolumeSource.mjs";
import { addSchema as IoK8sApiCoreV1DownwardAPIVolumeSource } from "./IoK8sApiCoreV1DownwardAPIVolumeSource.mjs";
import { addSchema as IoK8sApiCoreV1EmptyDirVolumeSource } from "./IoK8sApiCoreV1EmptyDirVolumeSource.mjs";
import { addSchema as IoK8sApiCoreV1EphemeralVolumeSource } from "./IoK8sApiCoreV1EphemeralVolumeSource.mjs";
import { addSchema as IoK8sApiCoreV1FCVolumeSource } from "./IoK8sApiCoreV1FCVolumeSource.mjs";
import { addSchema as IoK8sApiCoreV1FlexVolumeSource } from "./IoK8sApiCoreV1FlexVolumeSource.mjs";
import { addSchema as IoK8sApiCoreV1FlockerVolumeSource } from "./IoK8sApiCoreV1FlockerVolumeSource.mjs";
import { addSchema as IoK8sApiCoreV1GCEPersistentDiskVolumeSource } from "./IoK8sApiCoreV1GCEPersistentDiskVolumeSource.mjs";
import { addSchema as IoK8sApiCoreV1GitRepoVolumeSource } from "./IoK8sApiCoreV1GitRepoVolumeSource.mjs";
import { addSchema as IoK8sApiCoreV1GlusterfsVolumeSource } from "./IoK8sApiCoreV1GlusterfsVolumeSource.mjs";
import { addSchema as IoK8sApiCoreV1HostPathVolumeSource } from "./IoK8sApiCoreV1HostPathVolumeSource.mjs";
import { addSchema as IoK8sApiCoreV1ISCSIVolumeSource } from "./IoK8sApiCoreV1ISCSIVolumeSource.mjs";
import { addSchema as IoK8sApiCoreV1NFSVolumeSource } from "./IoK8sApiCoreV1NFSVolumeSource.mjs";
import { addSchema as IoK8sApiCoreV1PersistentVolumeClaimVolumeSource } from "./IoK8sApiCoreV1PersistentVolumeClaimVolumeSource.mjs";
import { addSchema as IoK8sApiCoreV1PhotonPersistentDiskVolumeSource } from "./IoK8sApiCoreV1PhotonPersistentDiskVolumeSource.mjs";
import { addSchema as IoK8sApiCoreV1PortworxVolumeSource } from "./IoK8sApiCoreV1PortworxVolumeSource.mjs";
import { addSchema as IoK8sApiCoreV1ProjectedVolumeSource } from "./IoK8sApiCoreV1ProjectedVolumeSource.mjs";
import { addSchema as IoK8sApiCoreV1QuobyteVolumeSource } from "./IoK8sApiCoreV1QuobyteVolumeSource.mjs";
import { addSchema as IoK8sApiCoreV1RBDVolumeSource } from "./IoK8sApiCoreV1RBDVolumeSource.mjs";
import { addSchema as IoK8sApiCoreV1ScaleIOVolumeSource } from "./IoK8sApiCoreV1ScaleIOVolumeSource.mjs";
import { addSchema as IoK8sApiCoreV1SecretVolumeSource } from "./IoK8sApiCoreV1SecretVolumeSource.mjs";
import { addSchema as IoK8sApiCoreV1StorageOSVolumeSource } from "./IoK8sApiCoreV1StorageOSVolumeSource.mjs";
import { addSchema as IoK8sApiCoreV1VsphereVirtualDiskVolumeSource } from "./IoK8sApiCoreV1VsphereVirtualDiskVolumeSource.mjs";
const schema = {
    "properties": {
        "awsElasticBlockStore": {
            "oneOf": [
                {
                    "$ref": "io.k8s.api.core.v1.AWSElasticBlockStoreVolumeSource#"
                },
                {
                    "type": "null"
                }
            ]
        },
        "azureDisk": {
            "oneOf": [
                {
                    "$ref": "io.k8s.api.core.v1.AzureDiskVolumeSource#"
                },
                {
                    "type": "null"
                }
            ]
        },
        "azureFile": {
            "oneOf": [
                {
                    "$ref": "io.k8s.api.core.v1.AzureFileVolumeSource#"
                },
                {
                    "type": "null"
                }
            ]
        },
        "cephfs": {
            "oneOf": [
                {
                    "$ref": "io.k8s.api.core.v1.CephFSVolumeSource#"
                },
                {
                    "type": "null"
                }
            ]
        },
        "cinder": {
            "oneOf": [
                {
                    "$ref": "io.k8s.api.core.v1.CinderVolumeSource#"
                },
                {
                    "type": "null"
                }
            ]
        },
        "configMap": {
            "oneOf": [
                {
                    "$ref": "io.k8s.api.core.v1.ConfigMapVolumeSource#"
                },
                {
                    "type": "null"
                }
            ]
        },
        "csi": {
            "oneOf": [
                {
                    "$ref": "io.k8s.api.core.v1.CSIVolumeSource#"
                },
                {
                    "type": "null"
                }
            ]
        },
        "downwardAPI": {
            "oneOf": [
                {
                    "$ref": "io.k8s.api.core.v1.DownwardAPIVolumeSource#"
                },
                {
                    "type": "null"
                }
            ]
        },
        "emptyDir": {
            "oneOf": [
                {
                    "$ref": "io.k8s.api.core.v1.EmptyDirVolumeSource#"
                },
                {
                    "type": "null"
                }
            ]
        },
        "ephemeral": {
            "oneOf": [
                {
                    "$ref": "io.k8s.api.core.v1.EphemeralVolumeSource#"
                },
                {
                    "type": "null"
                }
            ]
        },
        "fc": {
            "oneOf": [
                {
                    "$ref": "io.k8s.api.core.v1.FCVolumeSource#"
                },
                {
                    "type": "null"
                }
            ]
        },
        "flexVolume": {
            "oneOf": [
                {
                    "$ref": "io.k8s.api.core.v1.FlexVolumeSource#"
                },
                {
                    "type": "null"
                }
            ]
        },
        "flocker": {
            "oneOf": [
                {
                    "$ref": "io.k8s.api.core.v1.FlockerVolumeSource#"
                },
                {
                    "type": "null"
                }
            ]
        },
        "gcePersistentDisk": {
            "oneOf": [
                {
                    "$ref": "io.k8s.api.core.v1.GCEPersistentDiskVolumeSource#"
                },
                {
                    "type": "null"
                }
            ]
        },
        "gitRepo": {
            "oneOf": [
                {
                    "$ref": "io.k8s.api.core.v1.GitRepoVolumeSource#"
                },
                {
                    "type": "null"
                }
            ]
        },
        "glusterfs": {
            "oneOf": [
                {
                    "$ref": "io.k8s.api.core.v1.GlusterfsVolumeSource#"
                },
                {
                    "type": "null"
                }
            ]
        },
        "hostPath": {
            "oneOf": [
                {
                    "$ref": "io.k8s.api.core.v1.HostPathVolumeSource#"
                },
                {
                    "type": "null"
                }
            ]
        },
        "iscsi": {
            "oneOf": [
                {
                    "$ref": "io.k8s.api.core.v1.ISCSIVolumeSource#"
                },
                {
                    "type": "null"
                }
            ]
        },
        "name": {
            "type": "string"
        },
        "nfs": {
            "oneOf": [
                {
                    "$ref": "io.k8s.api.core.v1.NFSVolumeSource#"
                },
                {
                    "type": "null"
                }
            ]
        },
        "persistentVolumeClaim": {
            "oneOf": [
                {
                    "$ref": "io.k8s.api.core.v1.PersistentVolumeClaimVolumeSource#"
                },
                {
                    "type": "null"
                }
            ]
        },
        "photonPersistentDisk": {
            "oneOf": [
                {
                    "$ref": "io.k8s.api.core.v1.PhotonPersistentDiskVolumeSource#"
                },
                {
                    "type": "null"
                }
            ]
        },
        "portworxVolume": {
            "oneOf": [
                {
                    "$ref": "io.k8s.api.core.v1.PortworxVolumeSource#"
                },
                {
                    "type": "null"
                }
            ]
        },
        "projected": {
            "oneOf": [
                {
                    "$ref": "io.k8s.api.core.v1.ProjectedVolumeSource#"
                },
                {
                    "type": "null"
                }
            ]
        },
        "quobyte": {
            "oneOf": [
                {
                    "$ref": "io.k8s.api.core.v1.QuobyteVolumeSource#"
                },
                {
                    "type": "null"
                }
            ]
        },
        "rbd": {
            "oneOf": [
                {
                    "$ref": "io.k8s.api.core.v1.RBDVolumeSource#"
                },
                {
                    "type": "null"
                }
            ]
        },
        "scaleIO": {
            "oneOf": [
                {
                    "$ref": "io.k8s.api.core.v1.ScaleIOVolumeSource#"
                },
                {
                    "type": "null"
                }
            ]
        },
        "secret": {
            "oneOf": [
                {
                    "$ref": "io.k8s.api.core.v1.SecretVolumeSource#"
                },
                {
                    "type": "null"
                }
            ]
        },
        "storageos": {
            "oneOf": [
                {
                    "$ref": "io.k8s.api.core.v1.StorageOSVolumeSource#"
                },
                {
                    "type": "null"
                }
            ]
        },
        "vsphereVolume": {
            "oneOf": [
                {
                    "$ref": "io.k8s.api.core.v1.VsphereVirtualDiskVolumeSource#"
                },
                {
                    "type": "null"
                }
            ]
        }
    },
    "required": [
        "name"
    ],
    "type": "object"
};
export function addSchema() {
    IoK8sApiCoreV1AWSElasticBlockStoreVolumeSource();
    IoK8sApiCoreV1AzureDiskVolumeSource();
    IoK8sApiCoreV1AzureFileVolumeSource();
    IoK8sApiCoreV1CephFSVolumeSource();
    IoK8sApiCoreV1CinderVolumeSource();
    IoK8sApiCoreV1ConfigMapVolumeSource();
    IoK8sApiCoreV1CSIVolumeSource();
    IoK8sApiCoreV1DownwardAPIVolumeSource();
    IoK8sApiCoreV1EmptyDirVolumeSource();
    IoK8sApiCoreV1EphemeralVolumeSource();
    IoK8sApiCoreV1FCVolumeSource();
    IoK8sApiCoreV1FlexVolumeSource();
    IoK8sApiCoreV1FlockerVolumeSource();
    IoK8sApiCoreV1GCEPersistentDiskVolumeSource();
    IoK8sApiCoreV1GitRepoVolumeSource();
    IoK8sApiCoreV1GlusterfsVolumeSource();
    IoK8sApiCoreV1HostPathVolumeSource();
    IoK8sApiCoreV1ISCSIVolumeSource();
    IoK8sApiCoreV1NFSVolumeSource();
    IoK8sApiCoreV1PersistentVolumeClaimVolumeSource();
    IoK8sApiCoreV1PhotonPersistentDiskVolumeSource();
    IoK8sApiCoreV1PortworxVolumeSource();
    IoK8sApiCoreV1ProjectedVolumeSource();
    IoK8sApiCoreV1QuobyteVolumeSource();
    IoK8sApiCoreV1RBDVolumeSource();
    IoK8sApiCoreV1ScaleIOVolumeSource();
    IoK8sApiCoreV1SecretVolumeSource();
    IoK8sApiCoreV1StorageOSVolumeSource();
    IoK8sApiCoreV1VsphereVirtualDiskVolumeSource();
    register("io.k8s.api.core.v1.Volume", schema);
}
