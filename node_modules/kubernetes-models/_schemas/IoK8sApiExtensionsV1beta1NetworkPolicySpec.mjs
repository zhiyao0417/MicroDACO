import { register } from "@kubernetes-models/validate";
import { addSchema as IoK8sApiExtensionsV1beta1NetworkPolicyEgressRule } from "./IoK8sApiExtensionsV1beta1NetworkPolicyEgressRule.mjs";
import { addSchema as IoK8sApiExtensionsV1beta1NetworkPolicyIngressRule } from "./IoK8sApiExtensionsV1beta1NetworkPolicyIngressRule.mjs";
import { addSchema as IoK8sApimachineryPkgApisMetaV1LabelSelector } from "@kubernetes-models/apimachinery/_schemas/IoK8sApimachineryPkgApisMetaV1LabelSelector";
const schema = {
    "properties": {
        "egress": {
            "items": {
                "$ref": "io.k8s.api.extensions.v1beta1.NetworkPolicyEgressRule#"
            },
            "type": "array",
            "nullable": true
        },
        "ingress": {
            "items": {
                "$ref": "io.k8s.api.extensions.v1beta1.NetworkPolicyIngressRule#"
            },
            "type": "array",
            "nullable": true
        },
        "podSelector": {
            "$ref": "io.k8s.apimachinery.pkg.apis.meta.v1.LabelSelector#"
        },
        "policyTypes": {
            "items": {
                "type": "string"
            },
            "type": "array",
            "nullable": true
        }
    },
    "required": [
        "podSelector"
    ],
    "type": "object"
};
export function addSchema() {
    IoK8sApiExtensionsV1beta1NetworkPolicyEgressRule();
    IoK8sApiExtensionsV1beta1NetworkPolicyIngressRule();
    IoK8sApimachineryPkgApisMetaV1LabelSelector();
    register("io.k8s.api.extensions.v1beta1.NetworkPolicySpec", schema);
}
