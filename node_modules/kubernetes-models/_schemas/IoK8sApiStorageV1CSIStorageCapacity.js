"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.addSchema = void 0;
const validate_1 = require("@kubernetes-models/validate");
const IoK8sApimachineryPkgApiResourceQuantity_1 = require("@kubernetes-models/apimachinery/_schemas/IoK8sApimachineryPkgApiResourceQuantity");
const IoK8sApimachineryPkgApisMetaV1ObjectMeta_1 = require("@kubernetes-models/apimachinery/_schemas/IoK8sApimachineryPkgApisMetaV1ObjectMeta");
const IoK8sApimachineryPkgApisMetaV1LabelSelector_1 = require("@kubernetes-models/apimachinery/_schemas/IoK8sApimachineryPkgApisMetaV1LabelSelector");
const schema = {
    "properties": {
        "apiVersion": {
            "type": "string",
            "enum": [
                "storage.k8s.io/v1"
            ]
        },
        "capacity": {
            "oneOf": [
                {
                    "$ref": "io.k8s.apimachinery.pkg.api.resource.Quantity#"
                },
                {
                    "type": "null"
                }
            ]
        },
        "kind": {
            "type": "string",
            "enum": [
                "CSIStorageCapacity"
            ]
        },
        "maximumVolumeSize": {
            "oneOf": [
                {
                    "$ref": "io.k8s.apimachinery.pkg.api.resource.Quantity#"
                },
                {
                    "type": "null"
                }
            ]
        },
        "metadata": {
            "oneOf": [
                {
                    "$ref": "io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta#"
                },
                {
                    "type": "null"
                }
            ]
        },
        "nodeTopology": {
            "oneOf": [
                {
                    "$ref": "io.k8s.apimachinery.pkg.apis.meta.v1.LabelSelector#"
                },
                {
                    "type": "null"
                }
            ]
        },
        "storageClassName": {
            "type": "string"
        }
    },
    "required": [
        "storageClassName",
        "apiVersion",
        "kind"
    ],
    "type": "object"
};
function addSchema() {
    (0, IoK8sApimachineryPkgApiResourceQuantity_1.addSchema)();
    (0, IoK8sApimachineryPkgApisMetaV1ObjectMeta_1.addSchema)();
    (0, IoK8sApimachineryPkgApisMetaV1LabelSelector_1.addSchema)();
    (0, validate_1.register)("io.k8s.api.storage.v1.CSIStorageCapacity", schema);
}
exports.addSchema = addSchema;
