import { register } from "@kubernetes-models/validate";
import { addSchema as IoK8sApiCoreV1HTTPHeader } from "./IoK8sApiCoreV1HTTPHeader.mjs";
import { addSchema as IoK8sApimachineryPkgUtilIntstrIntOrString } from "@kubernetes-models/apimachinery/_schemas/IoK8sApimachineryPkgUtilIntstrIntOrString";
const schema = {
    "properties": {
        "host": {
            "type": "string",
            "nullable": true
        },
        "httpHeaders": {
            "items": {
                "$ref": "io.k8s.api.core.v1.HTTPHeader#"
            },
            "type": "array",
            "nullable": true
        },
        "path": {
            "type": "string",
            "nullable": true
        },
        "port": {
            "$ref": "io.k8s.apimachinery.pkg.util.intstr.IntOrString#"
        },
        "scheme": {
            "enum": [
                "HTTP",
                "HTTPS"
            ],
            "type": "string",
            "nullable": true
        }
    },
    "required": [
        "port"
    ],
    "type": "object"
};
export function addSchema() {
    IoK8sApiCoreV1HTTPHeader();
    IoK8sApimachineryPkgUtilIntstrIntOrString();
    register("io.k8s.api.core.v1.HTTPGetAction", schema);
}
