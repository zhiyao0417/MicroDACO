import { register } from "@kubernetes-models/validate";
import { addSchema as IoK8sApiPolicyV1beta1AllowedCSIDriver } from "./IoK8sApiPolicyV1beta1AllowedCSIDriver.mjs";
import { addSchema as IoK8sApiPolicyV1beta1AllowedFlexVolume } from "./IoK8sApiPolicyV1beta1AllowedFlexVolume.mjs";
import { addSchema as IoK8sApiPolicyV1beta1AllowedHostPath } from "./IoK8sApiPolicyV1beta1AllowedHostPath.mjs";
import { addSchema as IoK8sApiPolicyV1beta1FSGroupStrategyOptions } from "./IoK8sApiPolicyV1beta1FSGroupStrategyOptions.mjs";
import { addSchema as IoK8sApiPolicyV1beta1HostPortRange } from "./IoK8sApiPolicyV1beta1HostPortRange.mjs";
import { addSchema as IoK8sApiPolicyV1beta1RunAsGroupStrategyOptions } from "./IoK8sApiPolicyV1beta1RunAsGroupStrategyOptions.mjs";
import { addSchema as IoK8sApiPolicyV1beta1RunAsUserStrategyOptions } from "./IoK8sApiPolicyV1beta1RunAsUserStrategyOptions.mjs";
import { addSchema as IoK8sApiPolicyV1beta1RuntimeClassStrategyOptions } from "./IoK8sApiPolicyV1beta1RuntimeClassStrategyOptions.mjs";
import { addSchema as IoK8sApiPolicyV1beta1SELinuxStrategyOptions } from "./IoK8sApiPolicyV1beta1SELinuxStrategyOptions.mjs";
import { addSchema as IoK8sApiPolicyV1beta1SupplementalGroupsStrategyOptions } from "./IoK8sApiPolicyV1beta1SupplementalGroupsStrategyOptions.mjs";
const schema = {
    "properties": {
        "allowPrivilegeEscalation": {
            "type": "boolean",
            "nullable": true
        },
        "allowedCSIDrivers": {
            "items": {
                "$ref": "io.k8s.api.policy.v1beta1.AllowedCSIDriver#"
            },
            "type": "array",
            "nullable": true
        },
        "allowedCapabilities": {
            "items": {
                "type": "string"
            },
            "type": "array",
            "nullable": true
        },
        "allowedFlexVolumes": {
            "items": {
                "$ref": "io.k8s.api.policy.v1beta1.AllowedFlexVolume#"
            },
            "type": "array",
            "nullable": true
        },
        "allowedHostPaths": {
            "items": {
                "$ref": "io.k8s.api.policy.v1beta1.AllowedHostPath#"
            },
            "type": "array",
            "nullable": true
        },
        "allowedProcMountTypes": {
            "items": {
                "type": "string"
            },
            "type": "array",
            "nullable": true
        },
        "allowedUnsafeSysctls": {
            "items": {
                "type": "string"
            },
            "type": "array",
            "nullable": true
        },
        "defaultAddCapabilities": {
            "items": {
                "type": "string"
            },
            "type": "array",
            "nullable": true
        },
        "defaultAllowPrivilegeEscalation": {
            "type": "boolean",
            "nullable": true
        },
        "forbiddenSysctls": {
            "items": {
                "type": "string"
            },
            "type": "array",
            "nullable": true
        },
        "fsGroup": {
            "$ref": "io.k8s.api.policy.v1beta1.FSGroupStrategyOptions#"
        },
        "hostIPC": {
            "type": "boolean",
            "nullable": true
        },
        "hostNetwork": {
            "type": "boolean",
            "nullable": true
        },
        "hostPID": {
            "type": "boolean",
            "nullable": true
        },
        "hostPorts": {
            "items": {
                "$ref": "io.k8s.api.policy.v1beta1.HostPortRange#"
            },
            "type": "array",
            "nullable": true
        },
        "privileged": {
            "type": "boolean",
            "nullable": true
        },
        "readOnlyRootFilesystem": {
            "type": "boolean",
            "nullable": true
        },
        "requiredDropCapabilities": {
            "items": {
                "type": "string"
            },
            "type": "array",
            "nullable": true
        },
        "runAsGroup": {
            "oneOf": [
                {
                    "$ref": "io.k8s.api.policy.v1beta1.RunAsGroupStrategyOptions#"
                },
                {
                    "type": "null"
                }
            ]
        },
        "runAsUser": {
            "$ref": "io.k8s.api.policy.v1beta1.RunAsUserStrategyOptions#"
        },
        "runtimeClass": {
            "oneOf": [
                {
                    "$ref": "io.k8s.api.policy.v1beta1.RuntimeClassStrategyOptions#"
                },
                {
                    "type": "null"
                }
            ]
        },
        "seLinux": {
            "$ref": "io.k8s.api.policy.v1beta1.SELinuxStrategyOptions#"
        },
        "supplementalGroups": {
            "$ref": "io.k8s.api.policy.v1beta1.SupplementalGroupsStrategyOptions#"
        },
        "volumes": {
            "items": {
                "type": "string"
            },
            "type": "array",
            "nullable": true
        }
    },
    "required": [
        "seLinux",
        "runAsUser",
        "supplementalGroups",
        "fsGroup"
    ],
    "type": "object"
};
export function addSchema() {
    IoK8sApiPolicyV1beta1AllowedCSIDriver();
    IoK8sApiPolicyV1beta1AllowedFlexVolume();
    IoK8sApiPolicyV1beta1AllowedHostPath();
    IoK8sApiPolicyV1beta1FSGroupStrategyOptions();
    IoK8sApiPolicyV1beta1HostPortRange();
    IoK8sApiPolicyV1beta1RunAsGroupStrategyOptions();
    IoK8sApiPolicyV1beta1RunAsUserStrategyOptions();
    IoK8sApiPolicyV1beta1RuntimeClassStrategyOptions();
    IoK8sApiPolicyV1beta1SELinuxStrategyOptions();
    IoK8sApiPolicyV1beta1SupplementalGroupsStrategyOptions();
    register("io.k8s.api.policy.v1beta1.PodSecurityPolicySpec", schema);
}
