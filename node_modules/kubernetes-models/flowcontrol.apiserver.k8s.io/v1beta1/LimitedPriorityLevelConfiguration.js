"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.IoK8sApiFlowcontrolV1beta1LimitedPriorityLevelConfiguration = exports.LimitedPriorityLevelConfiguration = void 0;
const base_1 = require("@kubernetes-models/base");
const IoK8sApiFlowcontrolV1beta1LimitedPriorityLevelConfiguration_1 = require("../../_schemas/IoK8sApiFlowcontrolV1beta1LimitedPriorityLevelConfiguration.js");
/**
 * LimitedPriorityLevelConfiguration specifies how to handle requests that are subject to limits. It addresses two issues:
 *   - How are requests for this priority level limited?
 *   - What should be done with requests that exceed the limit?
 */
class LimitedPriorityLevelConfiguration extends base_1.Model {
}
exports.LimitedPriorityLevelConfiguration = LimitedPriorityLevelConfiguration;
exports.IoK8sApiFlowcontrolV1beta1LimitedPriorityLevelConfiguration = LimitedPriorityLevelConfiguration;
(0, base_1.setSchema)(LimitedPriorityLevelConfiguration, "io.k8s.api.flowcontrol.v1beta1.LimitedPriorityLevelConfiguration", IoK8sApiFlowcontrolV1beta1LimitedPriorityLevelConfiguration_1.addSchema);
