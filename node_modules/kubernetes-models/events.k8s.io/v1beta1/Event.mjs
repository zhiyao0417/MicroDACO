import { createTypeMetaGuard, Model, setSchema } from "@kubernetes-models/base";
import { addSchema } from "../../_schemas/IoK8sApiEventsV1beta1Event.mjs";
/**
 * Event is a report of an event somewhere in the cluster. It generally denotes some state change in the system. Events have a limited retention time and triggers and messages may evolve with time.  Event consumers should not rely on the timing of an event with a given Reason reflecting a consistent underlying trigger, or the continued existence of events with that Reason.  Events should be treated as informative, best-effort, supplemental data.
 */
export class Event extends Model {
    constructor(data) {
        super({
            apiVersion: Event.apiVersion,
            kind: Event.kind,
            ...data
        });
    }
}
Event.apiVersion = "events.k8s.io/v1beta1";
Event.kind = "Event";
Event.is = createTypeMetaGuard(Event);
setSchema(Event, "io.k8s.api.events.v1beta1.Event", addSchema);
export { Event as IoK8sApiEventsV1beta1Event };
