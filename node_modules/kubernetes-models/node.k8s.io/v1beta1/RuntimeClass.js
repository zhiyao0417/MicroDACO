"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.IoK8sApiNodeV1beta1RuntimeClass = exports.RuntimeClass = void 0;
const base_1 = require("@kubernetes-models/base");
const IoK8sApiNodeV1beta1RuntimeClass_1 = require("../../_schemas/IoK8sApiNodeV1beta1RuntimeClass.js");
/**
 * RuntimeClass defines a class of container runtime supported in the cluster. The RuntimeClass is used to determine which container runtime is used to run all containers in a pod. RuntimeClasses are (currently) manually defined by a user or cluster provisioner, and referenced in the PodSpec. The Kubelet is responsible for resolving the RuntimeClassName reference before running the pod.  For more details, see https://git.k8s.io/enhancements/keps/sig-node/585-runtime-class
 */
class RuntimeClass extends base_1.Model {
    constructor(data) {
        super({
            apiVersion: RuntimeClass.apiVersion,
            kind: RuntimeClass.kind,
            ...data
        });
    }
}
exports.RuntimeClass = RuntimeClass;
exports.IoK8sApiNodeV1beta1RuntimeClass = RuntimeClass;
RuntimeClass.apiVersion = "node.k8s.io/v1beta1";
RuntimeClass.kind = "RuntimeClass";
RuntimeClass.is = (0, base_1.createTypeMetaGuard)(RuntimeClass);
(0, base_1.setSchema)(RuntimeClass, "io.k8s.api.node.v1beta1.RuntimeClass", IoK8sApiNodeV1beta1RuntimeClass_1.addSchema);
