import { createTypeMetaGuard, Model, setSchema } from "@kubernetes-models/base";
import { addSchema } from "../../_schemas/IoK8sApiAuthorizationV1LocalSubjectAccessReview.mjs";
/**
 * LocalSubjectAccessReview checks whether or not a user or group can perform an action in a given namespace. Having a namespace scoped resource makes it much easier to grant namespace scoped policy that includes permissions checking.
 */
export class LocalSubjectAccessReview extends Model {
    constructor(data) {
        super({
            apiVersion: LocalSubjectAccessReview.apiVersion,
            kind: LocalSubjectAccessReview.kind,
            ...data
        });
    }
}
LocalSubjectAccessReview.apiVersion = "authorization.k8s.io/v1";
LocalSubjectAccessReview.kind = "LocalSubjectAccessReview";
LocalSubjectAccessReview.is = createTypeMetaGuard(LocalSubjectAccessReview);
setSchema(LocalSubjectAccessReview, "io.k8s.api.authorization.v1.LocalSubjectAccessReview", addSchema);
export { LocalSubjectAccessReview as IoK8sApiAuthorizationV1LocalSubjectAccessReview };
