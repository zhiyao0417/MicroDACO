"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.IoK8sApiAuthorizationV1SelfSubjectAccessReview = exports.SelfSubjectAccessReview = void 0;
const base_1 = require("@kubernetes-models/base");
const IoK8sApiAuthorizationV1SelfSubjectAccessReview_1 = require("../../_schemas/IoK8sApiAuthorizationV1SelfSubjectAccessReview.js");
/**
 * SelfSubjectAccessReview checks whether or the current user can perform an action.  Not filling in a spec.namespace means "in all namespaces".  Self is a special case, because users should always be able to check whether they can perform an action
 */
class SelfSubjectAccessReview extends base_1.Model {
    constructor(data) {
        super({
            apiVersion: SelfSubjectAccessReview.apiVersion,
            kind: SelfSubjectAccessReview.kind,
            ...data
        });
    }
}
exports.SelfSubjectAccessReview = SelfSubjectAccessReview;
exports.IoK8sApiAuthorizationV1SelfSubjectAccessReview = SelfSubjectAccessReview;
SelfSubjectAccessReview.apiVersion = "authorization.k8s.io/v1";
SelfSubjectAccessReview.kind = "SelfSubjectAccessReview";
SelfSubjectAccessReview.is = (0, base_1.createTypeMetaGuard)(SelfSubjectAccessReview);
(0, base_1.setSchema)(SelfSubjectAccessReview, "io.k8s.api.authorization.v1.SelfSubjectAccessReview", IoK8sApiAuthorizationV1SelfSubjectAccessReview_1.addSchema);
