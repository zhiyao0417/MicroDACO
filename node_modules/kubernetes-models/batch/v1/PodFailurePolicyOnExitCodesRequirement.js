"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.IoK8sApiBatchV1PodFailurePolicyOnExitCodesRequirement = exports.PodFailurePolicyOnExitCodesRequirement = void 0;
const base_1 = require("@kubernetes-models/base");
const IoK8sApiBatchV1PodFailurePolicyOnExitCodesRequirement_1 = require("../../_schemas/IoK8sApiBatchV1PodFailurePolicyOnExitCodesRequirement.js");
/**
 * PodFailurePolicyOnExitCodesRequirement describes the requirement for handling a failed pod based on its container exit codes. In particular, it lookups the .state.terminated.exitCode for each app container and init container status, represented by the .status.containerStatuses and .status.initContainerStatuses fields in the Pod status, respectively. Containers completed with success (exit code 0) are excluded from the requirement check.
 */
class PodFailurePolicyOnExitCodesRequirement extends base_1.Model {
}
exports.PodFailurePolicyOnExitCodesRequirement = PodFailurePolicyOnExitCodesRequirement;
exports.IoK8sApiBatchV1PodFailurePolicyOnExitCodesRequirement = PodFailurePolicyOnExitCodesRequirement;
(0, base_1.setSchema)(PodFailurePolicyOnExitCodesRequirement, "io.k8s.api.batch.v1.PodFailurePolicyOnExitCodesRequirement", IoK8sApiBatchV1PodFailurePolicyOnExitCodesRequirement_1.addSchema);
